# This workflow will install Python dependencies, run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pipeline Tests (ALL)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  mongo-pytest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }} üêç
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install requirements ‚è¨
      run: |
        echo "--- Installing PIP"
        python -m pip install --upgrade pip
        echo "--- Installing requirements"
        if [ -f mongo/requirements.txt ]; \
          then pip install -r mongo/requirements.txt; \
        fi

    - name: Lint with flake8 üìù
      run: |
        # stop the build if there are Python syntax errors or undefined names
        echo "--- Linting with flake8"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Start MongoDB üå±
      uses: supercharge/mongodb-github-action@1.12.0
      with:
        mongodb-version: ${{ vars.MONGO_VERS }}
        mongodb-username: ${{ vars.MONGO_USER }}
        mongodb-password: ${{ secrets.MONGO_PASS }}
        mongodb-db: ${{ vars.MONGO_BASE }}

    - name: Test with PyTest ‚öôÔ∏è
      env:
          LOGURU_LEVEL: ${{ vars.LOGURU_LEVEL }}

          MONGO_HOST: ${{ vars.MONGO_HOST }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}
      run: |
        echo "--- Starting PyTest"
        pytest mongo


  app-pytest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.11" ]
        python-app: [ "ai", "ws", "api" ]

    needs:
    - mongo-pytest

    if: ${{ needs.mongo-pytest.result == 'success' }}

    environment:
      name: api

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }} [${{ matrix.python-app }}] üêç
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install requirements ‚è¨
      run: |
        echo "--- Installing PIP"
        python -m pip install --upgrade pip
        echo "--- Installing PyTest prerequisites"
        pip install pytest flake8
        echo "--- Installing requirements"
        if [ -f ${{ matrix.python-app }}/requirements.txt ]; \
          then pip install -r ${{ matrix.python-app }}/requirements.txt; \
        fi

    - name: Lint with flake8 üìù
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Start Redis üõ¢Ô∏è
      uses: caiomarruda/redisearch-action@v1.0.1
      with:
        redis version: ${{ vars.REDIS_VERSION }}

    - name: Start MongoDB üå±
      uses: supercharge/mongodb-github-action@1.12.0
      with:
        mongodb-version: ${{ vars.MONGO_VERS }}
        mongodb-username: ${{ vars.MONGO_USER }}
        mongodb-password: ${{ secrets.MONGO_PASS }}
        mongodb-db: ${{ vars.MONGO_BASE }}

    - name: Test with PyTest ‚öôÔ∏è
      env:
          LOGURU_LEVEL: ${{ vars.LOGURU_LEVEL }}
          GUNICORN_CHDIR: ${{ vars.GUNICORN_CHDIR }}

          SEP_SECRET_KEY: ${{ secrets.SEP_SECRET_KEY }}
          API_ENV: ${{ vars.API_ENV }}

          MONGO_HOST: ${{ vars.MONGO_HOST }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}

          SEP_SMTP_FROM: ${{ secrets.SEP_SMTP_FROM }}
          SEP_SMTP_SERVER: ${{ secrets.SEP_SMTP_SERVER }}
          SEP_SMTP_USER: ${{ secrets.SEP_SMTP_USER }}
          SEP_SMTP_PASS: ${{ secrets.SEP_SMTP_PASS }}
          SEP_SMTP_HOSTNAME: ${{ secrets.SEP_SMTP_HOSTNAME }}
      run: |
        echo "--- Moving mongo lib where it belongs"
        cp -a mongo ${{ matrix.python-app }}/
        echo "--- Starting app in background"
        # Used for ai, api, ws
        if [ -f ${{ matrix.python-app }}/main.py ]
          then python3 ${{ matrix.python-app }}/main.py &
        fi
        echo "--- Sleep(3)"
        sleep 3
        echo "--- Starting PyTest"
        pytest ${{ matrix.python-app }}/tests/

  build-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-app: [ "ai", "ws", "api", "discord" ]

    needs:
    - app-pytest

    # We need to have a successful app-pytest before
    if: ${{ needs.app-pytest.result == 'success' }}

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v4

    - name: Log in to Docker Hub üîê
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extracting Metadata üîß
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.DOCKER_USERNAME }}/${{ matrix.python-app }}
        tags: |
          type=sha,prefix=,suffix=,format=short
          type=edge

    - name: Build üèóÔ∏è & Push to Docker Hub üöÄ
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./${{ matrix.python-app }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
